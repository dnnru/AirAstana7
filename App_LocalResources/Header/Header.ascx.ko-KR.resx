<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="arrivlaDate.text" xml:space="preserve">
    <value>날짜는 출발 날짜보다 늦어야 합니다.</value>
  </data>
  <data name="charExact.text" xml:space="preserve">
    <value>기호 {0}개를 입력해 주십시오</value>
  </data>
  <data name="charLimits.text" xml:space="preserve">
    <value>{0}부터 {1}까지에서 기호를 입력해 주십시오.</value>
  </data>
  <data name="dateBirtday.text" xml:space="preserve">
    <value>생일을 입력해 주십시오. 기입자의 연령은 2세 이상이어야 합니다.</value>
  </data>
  <data name="dateWithinYear.text" xml:space="preserve">
    <value>현재 날짜와 내년 오늘 날짜 사이에서 날짜를 입력해 주십시오.</value>
  </data>
  <data name="email.text" xml:space="preserve">
    <value>정확한 이메일 주소를 입력해 주십시오.</value>
  </data>
  <data name="emailEqualTo.text" xml:space="preserve">
    <value>확약 이메일이 일치하지 않습니다</value>
  </data>
  <data name="equalTo.text" xml:space="preserve">
    <value>Повторите пароль</value>
  </data>
  <data name="invalidDate.text" xml:space="preserve">
    <value>올바른 날짜를 입력해 주십시오</value>
  </data>
  <data name="lettersOnly.text" xml:space="preserve">
    <value>라틴 문자를 사용하십시오</value>
  </data>
  <data name="maxPax.text" xml:space="preserve">
    <value>전체 승객 인원은 9명을 초과해서는 안됩니다.</value>
  </data>
  <data name="notEqual.text" xml:space="preserve">
    <value>선택하신 것은 동일한 것일 수 없습니다.</value>
  </data>
  <data name="numberOfDigits.text" xml:space="preserve">
    <value>필요한 기호의 갯수를 기입하여 주십시오.</value>
  </data>
  <data name="numbersOnly.text" xml:space="preserve">
    <value>이 칸은 숫자만 들어가야 합니다.</value>
  </data>
  <data name="optionRequired.text" xml:space="preserve">
    <value>한 가지 선택안을 골라 주십시오.</value>
  </data>
  <data name="passwordAA.text" xml:space="preserve">
    <value>표기한 비밀번호는 1개 이상의 글자와 1개 이상의 숫자를 포함하고 최소한 기호가 여섯 개이어야 합니다.</value>
  </data>
  <data name="required.text" xml:space="preserve">
    <value>이 칸은 반드시 작성해야 합니다.</value>
  </data>
  <data name="tcRequired.text" xml:space="preserve">
    <value>들어가기 위해서 약관의 내용을 동의해야 합니다.</value>
  </data>
</root>